name: Build and Release

on:
  push:
    branches:
      - main
      - "release/*"
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build
        env:
          CI: true

      - name: Determine Version Name
        id: determine_version
        run: |
          if [ -n "${{ github.event.head_commit.message }}" ]; then
            VERSION_NAME=$(echo "${{ github.event.head_commit.message }}" | grep -oP '(?<=\[version: ).*?(?=\])')
          fi
          if [ -z "$VERSION_NAME" ]; then
            VERSION_NAME="v0.0.$(date +'%y%m%d')"
          fi
          echo "::set-output name=version_name::$VERSION_NAME"

      - name: Delete Existing Release
        if: always()
        run: |
          gh release delete ${{ steps.determine_version.outputs.version_name }} -y || true
          gh release delete-tag ${{ steps.determine_version.outputs.version_name }} || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_version.outputs.version_name }}
          release_name: ${{ steps.determine_version.outputs.version_name }}.${{ github.run_id }}
          draft: false
          prerelease: false

      - name: List APK Directory Contents
        run: ls -alh app/build/outputs/apk/release/

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: app-release-unsigned.apk
          asset_content_type: application/vnd.android.package-archive